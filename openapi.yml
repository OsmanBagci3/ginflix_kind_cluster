openapi: 3.0.3
info:
  title: Video Platform API
  description: API to upload MP4 videos, convert them to HLS, list metadata, and stream from S3-compatible storage like GarageHQ or MinIO.
  version: 1.0.0

servers:
  - url: http://localhost:8080

paths:
  /stream:
    get:
      summary: Stream a file from S3
      description: Streams a file from the configured S3-compatible storage by proxying the object through the API.
      parameters:
        - in: query
          name: file
          schema:
            type: string
          required: true
          description: The key/path of the file to stream (e.g., `videos/sample.m3u8`)
      responses:
        '200':
          description: Successful streaming of the requested file
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Missing or invalid `file` query parameter
        '502':
          description: Failed to fetch file from S3
      tags:
        - Stream

  /api/videos:
    get:
      summary: List all uploaded videos
      responses:
        '200':
          description: A list of video metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
      tags:
        - Video

  /api/video:
    post:
      summary: Upload a video file
      description: Uploads a video file for processing.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Video metadata after upload and conversion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        '400':
          description: Invalid request
        '500':
          description: Internal server error
      tags:
        - Video

  /api/video/delete:
    delete:
      summary: Delete a video
      description: Deletes a video by its ID.
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
          description: The ID of the video to delete
      responses:
        '200':
          description: Video successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Video successfully deleted"
        '400':
          description: Missing video ID
        '500':
          description: Failed to delete video
      tags:
        - Video

  /api/video/rate:
    post:
      summary: Rate a video
      description: Adds a rating to a video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                video_id:
                  type: string
                  description: The ID of the video to rate
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                  description: Rating value between 1 and 5
              required:
                - video_id
                - rating
      responses:
        '200':
          description: Video successfully rated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Video successfully rated"
        '400':
          description: Invalid request (missing video ID or invalid rating)
        '500':
          description: Failed to rate video
      tags:
        - Video

  /api/video/process:
    post:
      summary: Process a video
      description: Initiates processing of a previously uploaded video.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                video_id:
                  type: string
                  description: The ID of the video to process
              required:
                - video_id
      responses:
        '200':
          description: Video metadata after processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        '400':
          description: Missing or invalid video ID
        '500':
          description: Video processing failed
      tags:
        - Video

  /api/video/status:
    get:
      summary: Check video processing status
      description: Retrieves the current processing status of a video
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
          description: The ID of the video to check
      responses:
        '200':
          description: Video status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "6630c5ccf1cda70cbe36f8f9"
                  status:
                    type: string
                    example: "processing"
                  processed:
                    type: boolean
                    example: false
        '400':
          description: Missing video ID
        '500':
          description: Failed to get video status
      tags:
        - Video

components:
  schemas:
    Video:
      type: object
      properties:
        id:
          type: string
          example: "6630c5ccf1cda70cbe36f8f9"
        title:
          type: string
          example: "my_video.mp4"
        created_at:
          type: string
          format: date-time
          example: "2025-04-30T14:30:00Z"
        hls_url:
          type: string
          example: "videos/my_video.mp4/index.m3u8"
